{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["emailRegex","RegExp","telRegex","NPIRegex","passRegex","formValid","_ref","formErrors","rest","Object","objectWithoutProperties","valid","values","forEach","val","length","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","preventDefault","alert","state","console","log","concat","firstName","lastName","NPInumber","businessAddress","telephone","email","password","error","handleChange","_e$target","target","name","value","test","setState","defineProperty","react_default","a","createElement","className","onSubmit","noValidate","htmlFor","placeholder","type","onChange","react_router_dom","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b90a4278.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport {BrowserRouter as Router,Link} from \"react-router-dom\";\nimport Route from 'react-router-dom/Route';\n\nconst emailRegex = RegExp(\n  /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n);\n\nconst telRegex = RegExp(\n  /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/\n);\n\nconst NPIRegex = RegExp(\n  /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/\n);\nconst passRegex = RegExp(\n  /^(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).*$/\n);\n\nconst formValid =( { formErrors, ...rest }) => {\n  let valid = true;\n//validate form errors being empty6\n  Object.values(formErrors).forEach(val => {\n    val.length > 0  && (valid = false);\n});\n// validate form was filled out\nObject.values(rest).forEach(val => {\n  val === null  && (valid = false);\n});\n\nreturn valid; \n};\n\n\nclass App extends Component {\n\n \n constructor(props)\n {\n   super(props);\n\n   this.state={\n     firstName:null,\n     lastName:null,\n     NPInumber:null,\n     businessAddress:null,\n     telephone:null,\n     email:null,\n     password:null,\n     \n     \n     formErrors:{\n      firstName:\"\",\n      lastName:\"\",\n      NPInumber:\"\",\n      businessAddress:\"\",\n      telephone:\"\",\n      email:\"\",\n      password:\"\"\n     }\n   };\n }\n\n handleSubmit = e => {\n   e.preventDefault();\n   alert('check console for signed up results');\n   if(formValid(this.state)){\n     console.log(`\n     --Signed Up --\n     First Name: ${this.state.firstName}\n     Last Name: ${this.state.lastName}\n     NPI NUmber: ${this.state.NPInumber}\n     Business Address: ${this.state.businessAddress}\n     Telephone Address: ${this.state.telephone}\n     Email Address: ${this.state.email}\n     Password: ${this.state.password}\n     `)\n   }\n   else{\n     console.error(\"Form Invalid - Display Error Message\");\n   }\n };\n\n handleChange= e => {\n   e.preventDefault();\n   const {name, value} = e.target;\n   let formErrors =this.state.formErrors;\n\n    switch(name)\n   {\n     case 'firstName':\n       formErrors.firstName = value.length < 3 \n       ? 'minimum 3 characters required'\n      : \"\";\n      break;\n     case 'lastName':\n         formErrors.lastName = value.length < 3\n         ? 'minimum 3 characters required'\n        : \"\";\n        break;\n     case 'NPInumber':\n       formErrors.NPInumber = NPIRegex.test(value) \n       ? ''\n      : 'Number should be of pattern 10 digit ';\n      break;\n     case 'businessAddress':\n       formErrors.businessAddress = value.length < 3\n       ? 'minimum 3 characters required'\n      : \"\";\n      break;\n     case 'telephone':\n       formErrors.telephone =telRegex.test(value) \n       ? ''\n      : 'invalid phone number';\n      break;\n      case 'email':\n          formErrors.email = emailRegex.test(value) \n          ? ''\n         : 'invalid email address';\n         break;\n      case 'password':\n            formErrors.password = passRegex.test(value)\n            ? ''\n          \n           :'Password should contain 8 characters, 1 upper case, 1 number' \n           break;\n        default:\n        break;\n   }\n\n   this.setState({formErrors, [name]: value}, () => console.log(this.state));\n };\n\n  render(){\n\n    const {formErrors} =this.state;\n\n\n    return <div className=\"wrapper\"> \n    <div className=\"form-wrapper\">\n      <h1>Create Account</h1>\n      <form onSubmit={this.handleSubmit} noValidate>\n        <div className=\"firstName\">\n          <label htmlFor=\"firstName\">First Name</label>\n          <input \n           className={formErrors.firstName.length > 0 ? \"error\" : null} \n           placeholder=\"First Name\"\n           type=\"text\"\n           name=\"firstName\"\n           noValidate\n           onChange={this.handleChange}/>\n        </div>\n\n        {formErrors.firstName.length> 0 && (\n          <span className=\"errorMessage\">{formErrors.firstName}</span>\n        )}\n\n\n        <div className=\"lastName\">\n          <label htmlFor=\"lastName\">Last Name</label>\n          <input type=\"text\"\n            className={formErrors.lastName.length > 0 ? \"error\" : null} \n           placeholder=\"Last Name\"\n           name=\"lastName\"\n           noValidate\n           onChange={this.handleChange}/>\n        </div>\n        {formErrors.lastName.length> 0 && (\n          <span className=\"errorMessage\">{formErrors.lastName}</span>\n        )}\n\n        <div className=\"NPInumber\">\n          <label htmlFor=\"NPInumber\">NPI Number</label>\n          <input type=\"number\"\n            className={formErrors.NPInumber.length > 0 ? \"error\" : null} \n           placeholder=\"NPI Number\"\n           name=\"NPInumber\"\n           noValidate\n           onChange={this.handleChange}/>\n        </div>\n        {formErrors.NPInumber.length> 0 && (\n          <span className=\"errorMessage\">{formErrors.NPInumber}</span>\n        )}\n\n\n        <div className=\"businessAddress\">\n          <label htmlFor=\"businessAddress\">Business Address</label>\n          <input type=\"text\"\n            className={formErrors.businessAddress.length > 0 ? \"error\" : null} \n           placeholder=\"Business Address\"\n           name=\"businessAddress\"\n           noValidate\n           onChange={this.handleChange}/>\n        </div>\n        {formErrors.businessAddress.length> 0 && (\n          <span className=\"errorMessage\">{formErrors.businessAddress}</span>\n        )}\n\n        <div className=\"telephone\">\n          <label htmlFor=\"telephone\">Telephone Number</label>\n          <input type=\"number\"\n           className={formErrors.telephone.length > 0 ? \"error\" : null} \n           placeholder=\"Telephone Number\"\n           name=\"telephone\"\n           noValidate\n           onChange={this.handleChange}/>\n        </div>\n        {formErrors.telephone.length> 0 && (\n          <span className=\"errorMessage\">{formErrors.telephone}</span>\n        )}\n\n\n        <div className=\"email\">\n          <label htmlFor=\"email\">Email Address</label>\n          <input type=\"email\"\n          className={formErrors.email.length > 0 ? \"error\" : null} \n           placeholder=\"Email Address\"\n           name=\"email\"\n           noValidate\n           onChange={this.handleChange}/>\n         </div>\n         {formErrors.email.length> 0 && (\n          <span className=\"errorMessage\">{formErrors.email}</span>\n        )}\n\n\n         <div className=\"password\">\n          <label htmlFor=\"password\">Password</label>\n          <input type=\"password\"\n           className={formErrors.password.length > 0 ? \"error\" : null} \n           placeholder=\"Password\"\n           name=\"password\"\n           noValidate\n           onChange={this.handleChange}/>\n         </div>\n         \n         {formErrors.password.length> 0 && (\n          <span className=\"errorMessage\">{formErrors.password}</span>\n        )}\n\n\n         <div className=\"createAccount\">\n           <button type=\"Submit\">Create Account</button>\n           </div><div> <Router><Link> <small>Already have an Account? Signin\n         </small>\n         \n         </Link>\n         </Router>\n         </div>\n       </form>\n     </div>\n    </div>;\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}